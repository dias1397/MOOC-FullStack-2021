{"version":3,"sources":["components/Filter.js","components/PersonForm.js","services/persons.js","components/Person.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","search","onChange","value","PersonForm","newName","onChangeName","newNumber","onChangeNumber","onSubmit","type","baseUrl","axios","get","then","response","data","newPerson","post","id","put","delete","Person","person","persons","setPersons","setMessage","setIsError","name","number","onClick","window","confirm","personService","deletedPerson","filter","p","setTimeout","catch","err","error","Persons","map","Notification","message","isError","className","App","useState","setNewName","setNewNumber","searchName","setSearchName","useEffect","personsToShow","toLowerCase","includes","event","target","preventDefault","existingPerson","find","updatedPerson","console","log","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06206698.chunk.js","sourcesContent":["const Filter = ({ search, onChange }) => {\n    return (\n        <div>\n            Filter shown with <input value={search} onChange={onChange} />\n        </div>\n    )\n}\n\nexport default Filter;\n","const PersonForm = ({ newName, onChangeName, newNumber, onChangeNumber, onSubmit }) => {\n    return (\n        <form onSubmit={onSubmit}>\n            <div>\n                Name: <input value={newName} onChange={onChangeName} />\n            </div>\n            <div>\n                Number: <input type=\"number\" value={newNumber} onChange={onChangeNumber} />\n            </div>\n            <div>\n                <button type=\"submit\">ADD</button>\n            </div>\n        </form>\n    )\n\n}\n export default PersonForm;\n","import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = (newPerson) => {\n    const request = axios.post(baseUrl, newPerson)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newPerson) => {\n    const request = axios.put(`${baseUrl}/${id}`, newPerson)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove };\n","import personService from '../services/persons' \n\nconst Person = ({ person, persons, setPersons, setMessage, setIsError }) => {\n    const delPerson = () => {\n       if (window.confirm(`Delete ${person.name}?`)) {\n           personService\n                .remove(person.id)\n                .then(deletedPerson => {\n                    setPersons(persons.filter(p => p.id !== person.id));\n                    setMessage(`Deleted ${person.name}`);\n                    setIsError(false);\n                    setTimeout(() => {\n                        setMessage(null)\n                    }, 5000)\n                })\n                .catch(err => {\n                    setPersons(persons.filter(p => p.id !== person.id))\n                    setMessage(err.response.data.error);\n                    setIsError(true);\n                    setTimeout(() => {\n                        setMessage(null)\n                    }, 5000)\n                })\n       }\n    }\n\n    return <p> {person.name} - {person.number} <button onClick={() => delPerson()}>Delete</button> </p>\n}\n\nexport default Person;\n","import Person from './Person'\n\nconst Persons = ({ persons, setPersons, setMessage, setIsError }) => {\n    return (\n        persons.map(person => \n            <Person key={person.id} \n                person={person} \n                persons={persons} \n                setPersons={setPersons} \n                setMessage={setMessage} \n                setIsError={setIsError} />\n        )\n    )\n}\n\nexport default Persons;\n","const Notification = ({ message, isError }) => {\n    if (message === null) {\n        return null\n    }\n\n    if (isError) {\n        return (\n            <div className=\"error\">\n                {message}\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"success\">\n                {message}\n            </div>\n        )\n    }\n}\n\nexport default Notification;\n","import React, { useState, useEffect } from 'react'\nimport './index.css'\n\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\n\nimport personService from './services/persons'\n\nconst App = () => {\n    const [ persons, setPersons ] = useState([])\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ searchName, setSearchName ] = useState('')\n    const [ message, setMessage ] = useState(null);\n    const [ isError, setIsError ] = useState(false); \n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(persons => {\n                setPersons(persons)\n            })\n    }, [])\n\n    const addPerson = (event) => {\n        event.preventDefault();\n\n        const person = {\n            name: newName,\n            number: newNumber\n        };\n\n        const existingPerson = persons.find(p => p.name === person.name);\n\n        if (existingPerson) {\n            if (window.confirm(`${person.name} is already added to the phonebook, replace the old number with a new one?`)) {\n                personService\n                    .update(existingPerson.id, person)\n                    .then(updatedPerson => {\n                        setPersons(persons.map(person => person.id !== updatedPerson.id ? person : updatedPerson));\n                        setNewName(\"\");\n                        setNewNumber(\"\");\n                        setMessage(`Updated ${updatedPerson.name}`);\n                        setIsError(false);\n                        setTimeout(() => {\n                            setMessage(null)\n                        }, 5000)\n                    })\n                    .catch(error => {\n                        console.log(error)\n                        setMessage(error.response.data.error);\n                        setIsError(true);\n                        setTimeout(() => {\n                            setMessage(null)\n                        }, 5000)\n                    })\n            }\n        } else {\n            personService\n                .create(person)\n                .then(newPerson => {\n                    setPersons(persons.concat(newPerson))\n                    setNewName(\"\");\n                    setNewNumber(\"\");\n                    setMessage(`Added ${newPerson.name}`);\n                    setIsError(false);\n                    setTimeout(() => {\n                        setMessage(null)\n                    }, 5000)\n                })\n                .catch(error => {\n                    setMessage(error.response.data.error);\n                    setIsError(true);\n                    setTimeout(() => {\n                        setMessage(null)\n                    }, 5000)\n                })\n        }\n    }\n\n    const handleSearchChange = (event) => {\n        setSearchName(event.target.value);\n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value);\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value);\n    }\n    \n    const personsToShow = persons.filter(person => person.name.toLowerCase().includes(searchName.toLowerCase()));\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={message} isError={isError}/>\n            <Filter search={searchName} onChange={handleSearchChange}/>\n\n            <br/>\n            <hr/>\n\n            <h3>New Number</h3>\n            <PersonForm \n                newName = {newName}\n                onChangeName = {handleNameChange}\n                newNumber = {newNumber}\n                onChangeNumber = {handleNumberChange}\n                onSubmit = {addPerson}\n            />\n\n            <br/>\n            <hr/>\n\n            <h3>Numbers</h3>\n            <Persons persons={personsToShow} setPersons={setPersons} setMessage={setMessage} setIsError={setIsError} />\n        </div>\n    )\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}